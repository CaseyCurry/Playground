{"version":3,"file":"architect-address-widget.umd.js","sources":["~/@navihealth/architect-address-widget/src/widget.ts","~/@navihealth/architect-address-widget/src/environments/environment.ts","~/@navihealth/architect-address-widget/src/app/app.module.ts","~/@navihealth/architect-address-widget/src/app/app.component.ts","~/@navihealth/architect-address-widget/src/app/bus.ts"],"sourcesContent":["import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst /** @type {?} */ id = 'c5d03052-1716-4dfb-a08a-76967051d4cf';\nconst /** @type {?} */ title = 'Architect Address (Angular 4)';\nconst /** @type {?} */ width = {\n  xs: 12,\n  sm: 8,\n  md: 6,\n  lg: 5,\n  xl: 4\n};\nconst /** @type {?} */ initialHeight = '250px';\nconst /** @type {?} */ render = async function(container: HTMLElement) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const /** @type {?} */ appRoot = document.createElement('architect-address-widget');\n      container.appendChild(appRoot);\n      await platformBrowserDynamic().bootstrapModule(AppModule);\n      resolve();\n    } catch ( /** @type {?} */error) {\n      reject(error);\n    }\n  });\n};\n\nexport default {\n  id,\n  title,\n  width,\n  initialHeight,\n  render\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const /** @type {?} */ environment = {\n  production: false\n};\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nexport class AppModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AppModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAppModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAppModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { BusFactory } from './bus';\n\nexport interface IAddress {\n  line1: string;\n  line2?: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n}\nexport class AppComponent {\n  title: string;\n  bus: any;\n  address: IAddress;\n/**\n * @param {?} changeDetectorRef\n * @param {?} elementRef\n */\nconstructor(private changeDetectorRef: ChangeDetectorRef,\nprivate elementRef: ElementRef) {\n    this.title = 'address';\n    this.bus = BusFactory.create();\n    this.bus.listen({\n      eventName: 'architect-selected',\n      responder: (event) => {\n        this.address = this.getAddress(event.message.name);\n        changeDetectorRef.detectChanges();\n      }\n    });\n  }\n/**\n * @param {?} architect\n * @return {?}\n */\nprivate getAddress(architect): IAddress {\n    switch (architect) {\n      case 'Seshan':\n        return {\n          line1: '123 Scenic Dr',\n          line2: 'Apt 43',\n          city: 'Nashville',\n          state: 'TN',\n          postalCode: '37203',\n          country: 'US'\n        };\n      case 'Nijil':\n        return {\n          line1: '456 Pearl St',\n          city: 'Nashville',\n          state: 'TN',\n          postalCode: '37203',\n          country: 'US'\n        };\n      case 'Aneesh':\n        return {\n          line1: '789 Main St',\n          city: 'Nashville',\n          state: 'TN',\n          postalCode: '37203',\n          country: 'US'\n        };\n      default:\n        return {\n          line1: 'Corner of 65 and Charlotte',\n          city: 'Nashville',\n          state: 'TN',\n          postalCode: '37203',\n          country: 'US'\n        };\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this.elementRef.nativeElement.classList.add('architect-address-widget');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'architect-address-widget',\n  template: `\n    <div class='col-xs-12'>\n      <label>line 1:</label>\n      <span *ngIf=\"address\">{{ address.line1 }}</span>\n    </div>\n    <div class='col-xs-12'>\n      <label>line 2:</label>\n      <span *ngIf=\"address\">{{ address.line2 }}</span>\n    </div>\n    <div class='row'>\n      <div class='col-8'>\n        <label>city:</label>\n        <span *ngIf=\"address\">{{ address.city }}</span>\n      </div>\n      <div class='col-4'>\n        <label>state:</label>\n        <span *ngIf=\"address\">{{ address.state }}</span>\n      </div>\n    </div>\n    <div class='col-xs-12'>\n      <label>postal code:</label>\n      <span *ngIf=\"address\">{{ address.postalCode }}</span>\n    </div>\n    <div class='col-xs-12'>\n      <label>country:</label>\n      <span *ngIf=\"address\">{{ address.country }}</span>\n    </div>\n  `,\n  styles: [`\n    :host.architect-address-widget {\n      color: red;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: ElementRef, },\n];\n}\n\nfunction AppComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAppComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAppComponent.ctorParameters;\n/** @type {?} */\nAppComponent.prototype.title;\n/** @type {?} */\nAppComponent.prototype.bus;\n/** @type {?} */\nAppComponent.prototype.address;\n/** @type {?} */\nAppComponent.prototype.changeDetectorRef;\n/** @type {?} */\nAppComponent.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","declare const process: any;\ndeclare const window: any;\n\ntype ResponderFunction = (event: IEvent) => Promise<any>;\n\ninterface IListener {\n  eventName: string;\n  responder: ResponderFunction;\n}\n\ninterface IEvent {\n  eventName: string;\n  message?: any;\n}\nclass Bus {\n  subscribers: object;\nconstructor() {\n    this.subscribers = {};\n  }\n/**\n * @param {?} listener\n * @return {?}\n */\npublic listen(listener: IListener) {\n    this.writeToConsoleInDev('listen', listener);\n    if (!listener.eventName) {\n      throw new Error('Argument listener.eventName is required.');\n    }\n    if (!listener.responder) {\n      throw new Error('Argument listener.respond is required.');\n    }\n    if (!this.subscribers[listener.eventName]) {\n      this.subscribers[listener.eventName] = [];\n    }\n    this.subscribers[listener.eventName].push(listener);\n  }\n/**\n * @param {?} listener\n * @return {?}\n */\npublic ignore(listener: IListener) {\n    this.writeToConsoleInDev('ignore', listener);\n    if (!listener || !listener.eventName) {\n      return;\n    }\n    const /** @type {?} */ listeners = this.subscribers[listener.eventName];\n    if (!listeners || listeners.length === 0) {\n      return;\n    }\n    const /** @type {?} */ index = listeners.indexOf(listener);\n    if (index > -1) {\n      this.subscribers[listener.eventName].splice(index, 1);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic notify(event: IEvent) {\n    this.writeToConsoleInDev('notify', event);\n    return new Promise((resolve, reject) => {\n      if (!event.eventName) {\n        reject(new Error('Argument event.eventName is required.'));\n      }\n      const /** @type {?} */ listeners = this.subscribers[event.eventName];\n      if (listeners) {\n        resolve(Promise\n          .all(listeners.map(listener => listener.responder(event))));\n      }\n    });\n  }\n/**\n * @param {?} action\n * @param {?} context\n * @return {?}\n */\nprivate writeToConsoleInDev(action: string, context: any) {\n    if (process.env.DEV) {\n      console.log('@navihealth/browser-bus ' + action, context);\n    }\n  }\n}\n\nfunction Bus_tsickle_Closure_declarations() {\n/** @type {?} */\nBus.prototype.subscribers;\n}\n\n\nconst /** @type {?} */ BusFactory = {\n  create: () => {\n    if (window.nhBrowserBus && window.nhBrowserBus.instance) {\n      return window.nhBrowserBus.instance;\n    } if (window.nhBrowserBus) {\n      const /** @type {?} */ instance = new Bus();\n      window.nhBrowserBus.instance = instance;\n      return instance;\n    } else {\n      const /** @type {?} */ instance = new Bus();\n      window.nhBrowserBus = { instance: instance };\n      return instance;\n    }\n  }\n};\n\nexport { BusFactory };\n"],"names":["platformBrowserDynamic","enableProdMode","BrowserModule","NgModule","ElementRef","ChangeDetectorRef","Component"],"mappings":"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"}
